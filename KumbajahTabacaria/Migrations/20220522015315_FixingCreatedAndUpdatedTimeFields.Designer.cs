// <auto-generated />
using System;
using Kumbajah.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KumbajahTabacaria.Migrations
{
    [DbContext(typeof(KumbajahContext))]
    [Migration("20220522015315_FixingCreatedAndUpdatedTimeFields")]
    partial class FixingCreatedAndUpdatedTimeFields
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Kumbajah.Domain.Entities.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("VARCHAR(80)")
                        .HasColumnName("NAME");

                    b.Property<long>("ProductId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("PRODUCT_ID");

                    b.HasKey("Id");

                    b.ToTable("CATEGORY");
                });

            modelBuilder.Entity("Kumbajah.Domain.Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<long>("CategoryId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("CATEGORY_ID");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("DATE")
                        .HasColumnName("CREATED_TIME");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("VARCHAR(180)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("IMAGE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("VARCHAR(80)")
                        .HasColumnName("NAME");

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(10,10)")
                        .HasColumnName("PRICE");

                    b.Property<long?>("Quantity")
                        .IsRequired()
                        .HasColumnType("BIGINT")
                        .HasColumnName("QUANTITY");

                    b.Property<DateTime?>("UpdateTime")
                        .IsRequired()
                        .HasColumnType("DATE")
                        .HasColumnName("UPDATED_TIME");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("PRODUCT");
                });

            modelBuilder.Entity("Kumbajah.Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("DATE")
                        .HasColumnName("BIRTHDAY");

                    b.Property<long>("CPF")
                        .HasMaxLength(11)
                        .HasColumnType("BIGINT")
                        .HasColumnName("CPF");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("VARCHAR(80)")
                        .HasColumnName("LAST_NAME");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("NAME");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("VARCHAR(180)")
                        .HasColumnName("PASSWORD");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("BIGINT")
                        .HasColumnName("PHONE_NUMBER");

                    b.HasKey("Id");

                    b.ToTable("ACCOUNT");
                });

            modelBuilder.Entity("Kumbajah.Domain.Entities.Product", b =>
                {
                    b.HasOne("Kumbajah.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Kumbajah.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
